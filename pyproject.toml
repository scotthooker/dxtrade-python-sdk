[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "dxtrade-sdk"
version = "1.0.0"
description = "Python SDK for DXTrade trading platform - REST API, WebSocket streaming, and transport layer"
readme = "README.md"
license = {text = "MIT"}
requires-python = ">=3.10"
authors = [
    {name = "Scott Hooker", email = "scott@dxtrade-sdk.com"},
]
maintainers = [
    {name = "Scott Hooker", email = "scott@dxtrade-sdk.com"},
]
keywords = ["dxtrade", "trading", "api", "websocket", "finance", "forex", "stocks", "crypto", "transport", "sdk", "client"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Networking",
    "Typing :: Typed",
    "Natural Language :: English",
]

dependencies = [
    "aiohttp>=3.8.0",
    "websockets>=12.0",
    "pydantic>=2.5.0",
    "python-dotenv>=1.0.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.23.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "ruff>=0.1.6",
    "mypy>=1.7.0",
    "black>=23.11.0",
]
docs = [
    "mkdocs>=1.5.3",
    "mkdocs-material>=9.4.0",
    "mkdocstrings[python]>=0.24.0",
]

[project.urls]
Homepage = "https://github.com/dxtrade-sdk/dxtrade-python-sdk"
Documentation = "https://github.com/dxtrade-sdk/dxtrade-python-sdk/tree/main/docs"
Repository = "https://github.com/dxtrade-sdk/dxtrade-python-sdk"
"Bug Tracker" = "https://github.com/dxtrade-sdk/dxtrade-python-sdk/issues"
"Source Code" = "https://github.com/dxtrade-sdk/dxtrade-python-sdk"
Changelog = "https://github.com/dxtrade-sdk/dxtrade-python-sdk/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["src/dxtrade"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/tests", 
    "/examples",
    "/docs",
    "/README.md",
    "/LICENSE",
    "/.env.example",
]

# Ruff configuration
[tool.ruff]
target-version = "py310"
line-length = 88
src = ["src", "tests"]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "B",   # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "RUF", # ruff-specific rules
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"tests/**/*.py" = ["S101"]  # Allow assert in tests
"**/__init__.py" = ["F401"] # Allow unused imports in __init__.py

[tool.ruff.lint.isort]
known-first-party = ["dxtrade"]
force-single-line = true

# Black configuration
[tool.black]
target-version = ['py310']
line-length = 88
include = '\.pyi?$'
extend-exclude = '''
/(
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# MyPy configuration
[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
implicit_reexport = false
strict_equality = true
extra_checks = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

# Pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=dxtrade",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-fail-under=90",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow tests",
]
asyncio_mode = "auto"

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
    "\\.\\.\\.",
    "pass",
]